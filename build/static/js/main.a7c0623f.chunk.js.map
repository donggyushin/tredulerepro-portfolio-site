{"version":3,"sources":["assets/image1.jpg","serviceWorker.ts","components/Home/home.tsx","routes/index.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","Home","className","style","height","left","cascade","src","require","alt","Routes","path","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wMAAAA,EAAOC,QAAU,IAA0B,oC,kFCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2CCyESC,MArFf,WACI,OACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,QAAhB,QAKR,yBAAKC,MAAO,CACRC,OAAQ,WAEZ,yBAAKF,UAAU,YACX,kBAAC,IAAD,CAAMG,MAAI,EAACC,SAAO,GACd,yBAAKJ,UAAU,eACf,0BAAMA,UAAU,QAAhB,kBAMR,yBAAKC,MAAO,CACRC,OAAQ,UAEZ,yBAAKF,UAAU,iBACX,kBAAC,IAAD,CAAMG,MAAI,EAACC,SAAO,GACd,uBAAGJ,UAAU,OAAb,2CAGA,uBAAGA,UAAU,SAAb,wBAKR,yBAAKC,MAAO,CACRC,OAAQ,WAGZ,yBAAKF,UAAU,cACX,yBAAKK,IAAKC,EAAQ,IAA4BC,IAAI,MAGtD,yBAAKN,MAAO,CACRC,OAAQ,WAEZ,yBAAKF,UAAU,YAEX,yBAAKA,UAAU,eACf,0BAAMA,UAAU,QAAhB,cAKJ,yBAAKC,MAAO,CACRC,OAAQ,UAGZ,uBAAGF,UAAU,qBAAb,YAIA,yBAAKC,MAAO,CACRC,OAAQ,UAGZ,uBAAGF,UAAU,eAAb,8YAGA,yBAAKC,MAAO,CACRC,OAAQ,UAEZ,uBAAGF,UAAU,eAAb,qWAKA,8HACA,yBAAKC,MAAO,CACRC,OAAQ,aCjETM,MAZf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,KACR,kBAAC,EAAD,UCPpBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SHiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a7c0623f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image1.5217b819.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport './styles.scss'\n//@ts-ignore\nimport Fade from 'react-reveal/Fade';\n\n\nfunction Home() {\n    return (\n        <div className=\"Home\">\n            <div className=\"top\">\n                <div className=\"black__box\">\n                    <text className=\"span\">\n                        DG\n                    </text>\n                </div>\n            </div>\n            <div style={{\n                height: \"167px\"\n            }} />\n            <div className=\"my__name\">\n                <Fade left cascade>\n                    <div className=\"short_line\"></div>\n                    <span className=\"name\">\n                        Shin Donggyu\n                </span>\n                </Fade>\n\n            </div>\n            <div style={{\n                height: \"80px\"\n            }} />\n            <div className=\"introduce__me\">\n                <Fade left cascade>\n                    <p className=\"one\">\n                        Making application that makes your life\n                </p>\n                    <p className=\"three\">\n                        fun and convenient\n                </p>\n                </Fade>\n            </div>\n            <div style={{\n                height: \"300px\"\n            }} />\n            {/* <Fade bottom cascade> */}\n            <div className=\"big__image\">\n                <img src={require('../../assets/image1.jpg')} alt=\"\" />\n            </div>\n            {/* </Fade> */}\n            <div style={{\n                height: \"180px\"\n            }} />\n            <div className=\"my__name\">\n                {/* <Fade left cascade> */}\n                <div className=\"short_line\"></div>\n                <span className=\"name\">\n                    Who I am?\n                </span>\n                {/* </Fade> */}\n            </div>\n            <div style={{\n                height: \"40px\"\n            }} />\n            {/* <Fade left cascade> */}\n            <p className=\"middle__big__text\">\n                I am ...\n                </p>\n            {/* </Fade> */}\n            <div style={{\n                height: \"80px\"\n            }} />\n            {/* <Fade bottom cascade> */}\n            <p className=\"plane__text\">\n                A developer who loves music and developing :) I enjoy making applications that can make people fun and convenient. I’m a fool stack developer, I have more concentrated on front-end development. Mostly, I have worked on area where web and mobile development. I really like to challenge to new areas which I’ve never experienced before, so I’m always ready to enter into any areas.\n            </p>\n            <div style={{\n                height: \"40px\"\n            }} />\n            <p className=\"plane__text\">\n                I’m not a career position yet, but I had managed (적당히 많은 이라는 뉘앙스는 어떻게 표현하는게 좋을지 알아보기) pretty lot of services during my University and I’m currently managing two services on the both side of web and App Store.\n            </p>\n\n            {/* </Fade> */}\n            <p>줄바꿈 단어 단위로 안되는거 고치기!</p>\n            <div style={{\n                height: \"400px\"\n            }} />\n        </div>\n    )\n}\n\nexport default Home","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Home from \"../components/Home/home\";\n\nfunction Routes() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\">\n                    <Home />\n                </Route>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default Routes","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}